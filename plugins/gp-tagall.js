const config = require('../config')
const { cmd, commands } = require('../command')
const { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, runtime, sleep, fetchJson } = require('../lib/functions')

cmd({
    pattern: "tagall",
    react: "‚ö°",
    alias: ["üòπ", "gc_tagall"],
    desc: "Dark styled Tag All",
    category: "group",
    use: ".tagall [message]",
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, isAdmins, isCreator, args }) => {
    try {
        if (!isGroup) return reply("‚ùå This command only works in groups!");
        if (!isAdmins && !isCreator) return reply("‚ùå Only admins or the owner can use this command.");

        let groupInfo = await conn.groupMetadata(from);
        let groupName = groupInfo.subject || "Unnamed Group";
        let totalMembers = participants.length;

        let customMsg = args.length > 0 ? args.join(" ") : "‚ö† ATTENTION ALL MEMBERS ‚ö†";

        let teks = `
‚ïî‚ïê‚ïê‚ïê‚ùñ‚Ä¢‡≥ã¬∞ ¬∞‡≥ã‚Ä¢‚ùñ‚ïê‚ïê‚ïê‚ïó
      ùêåùêàùêçùêà-ùêâùêÑùêíùêîùêí-ùêÇùêëùêÄùêíùêá
‚ïö‚ïê‚ïê‚ïê‚ùñ‚Ä¢‡≥ã¬∞ ¬∞‡≥ã‚Ä¢‚ùñ‚ïê‚ïê‚ïê‚ïù

üï∑ GROUP : *${groupName}*
üåë MEMBERS : *${totalMembers}*
‚ö° MESSAGE : *${customMsg}*

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ DARK BROADCAST ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

`;

        for (let mem of participants) {
            teks += `‚Ä¢‡≥ã¬∞ùêåùêàùêçùêà-ùêâùêÑùêíùêîùêí @${mem.id.split('@')[0]}\n`;
        }

        teks += `
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚öîÔ∏è  POWERED BY: ùêåùêàùêçùêà-ùêâùêÑùêíùêîùêí-ùêÇùêëùêÄùêíùêá  
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`;

        await conn.sendMessage(from, { text: teks, mentions: participants.map(p => p.id) }, { quoted: mek });

    } catch (e) {
        console.error("Dark TagAll Error:", e);
        reply(`‚ùå Error: ${e.message}`);
    }
});
